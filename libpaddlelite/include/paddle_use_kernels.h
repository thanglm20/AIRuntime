#pragma once
#include "paddle_lite_factory_helper.h"

USE_LITE_KERNEL(sequence_arithmetic, kX86, kFloat, kNCHW, def);
USE_LITE_KERNEL(search_seq_arithmetic, kX86, kFloat, kNCHW, def);
USE_LITE_KERNEL(search_grnn, kX86, kFloat, kNCHW, def);
USE_LITE_KERNEL(reduce_sum, kX86, kFloat, kNCHW, def);
USE_LITE_KERNEL(reduce_mean, kX86, kFloat, kNCHW, def);
USE_LITE_KERNEL(search_fc, kX86, kFloat, kNCHW, def);
USE_LITE_KERNEL(sequence_reverse, kX86, kFloat, kNCHW, def);
USE_LITE_KERNEL(sequence_reverse, kX86, kInt64, kNCHW, def);
USE_LITE_KERNEL(expand_as, kHost, kFloat, kAny, def);
USE_LITE_KERNEL(pool2d, kX86, kFloat, kNCHW, def);
USE_LITE_KERNEL(mul, kX86, kFloat, kNCHW, def);
USE_LITE_KERNEL(layer_norm, kX86, kFloat, kNCHW, def);
USE_LITE_KERNEL(scale, kX86, kFloat, kNCHW, def);
USE_LITE_KERNEL(softmax, kX86, kFloat, kNCHW, def);
USE_LITE_KERNEL(search_seq_softmax, kX86, kFloat, kNCHW, def);
USE_LITE_KERNEL(fill_constant, kHost, kAny, kNCHW, def);
USE_LITE_KERNEL(matmul, kX86, kFloat, kNCHW, def);
USE_LITE_KERNEL(fetch, kHost, kAny, kAny, def);
USE_LITE_KERNEL(sequence_topk_avg_pooling, kX86, kFloat, kNCHW, def);
USE_LITE_KERNEL(sequence_expand_as, kX86, kFloat, kNCHW, def);
USE_LITE_KERNEL(dropout, kX86, kFloat, kNCHW, def);
USE_LITE_KERNEL(stack, kX86, kFloat, kNCHW, def);
USE_LITE_KERNEL(concat, kX86, kFloat, kNCHW, def);
USE_LITE_KERNEL(multiclass_nms, kHost, kFloat, kNCHW, def);
USE_LITE_KERNEL(multiclass_nms2, kHost, kFloat, kNCHW, def);
USE_LITE_KERNEL(shape, kX86, kFloat, kNCHW, def);
USE_LITE_KERNEL(expand, kHost, kFloat, kAny, def);
USE_LITE_KERNEL(expand, kHost, kInt32, kAny, def);
USE_LITE_KERNEL(slice, kX86, kFloat, kNCHW, def);
USE_LITE_KERNEL(sequence_concat, kX86, kFloat, kNCHW, def);
USE_LITE_KERNEL(square, kX86, kFloat, kNCHW, def);
USE_LITE_KERNEL(relu, kX86, kFloat, kNCHW, def);
USE_LITE_KERNEL(leaky_relu, kX86, kFloat, kNCHW, def);
USE_LITE_KERNEL(tanh, kX86, kFloat, kNCHW, def);
USE_LITE_KERNEL(gelu, kX86, kFloat, kNCHW, def);
USE_LITE_KERNEL(softsign, kX86, kFloat, kNCHW, def);
USE_LITE_KERNEL(sigmoid, kX86, kFloat, kNCHW, def);
USE_LITE_KERNEL(relu6, kX86, kFloat, kNCHW, def);
USE_LITE_KERNEL(search_seq_depadding, kX86, kFloat, kNCHW, def);
USE_LITE_KERNEL(box_coder, kX86, kFloat, kNCHW, def);
USE_LITE_KERNEL(stack, kHost, kFloat, kAny, def);
USE_LITE_KERNEL(stack, kHost, kInt32, kAny, def);
USE_LITE_KERNEL(transpose, kX86, kFloat, kNCHW, def);
USE_LITE_KERNEL(transpose2, kX86, kFloat, kNCHW, def);
USE_LITE_KERNEL(conv2d, kX86, kFloat, kNCHW, def);
USE_LITE_KERNEL(depthwise_conv2d, kX86, kFloat, kNCHW, def);
USE_LITE_KERNEL(search_attention_padding_mask, kX86, kFloat, kNCHW, def);
USE_LITE_KERNEL(sequence_pool, kX86, kFloat, kNCHW, def);
USE_LITE_KERNEL(fc, kX86, kFloat, kNCHW, def);
USE_LITE_KERNEL(bilinear_interp, kX86, kFloat, kNCHW, def);
USE_LITE_KERNEL(nearest_interp, kX86, kFloat, kNCHW, def);
USE_LITE_KERNEL(unsqueeze, kHost, kAny, kAny, def);
USE_LITE_KERNEL(unsqueeze2, kHost, kAny, kAny, def);
USE_LITE_KERNEL(gru, kX86, kFloat, kNCHW, def);
USE_LITE_KERNEL(fill_constant_batch_size_like, kX86, kFloat, kNCHW, def);
USE_LITE_KERNEL(fill_constant_batch_size_like, kHost, kAny, kNCHW, def);
USE_LITE_KERNEL(sequence_conv, kX86, kFloat, kNCHW, def);
USE_LITE_KERNEL(feed, kHost, kAny, kAny, def);
USE_LITE_KERNEL(gather, kX86, kFloat, kNCHW, def);
USE_LITE_KERNEL(gather, kX86, kFloat, kNCHW, int64_in);
USE_LITE_KERNEL(match_matrix_tensor, kX86, kFloat, kNCHW, def);
USE_LITE_KERNEL(sequence_reshape, kX86, kInt64, kNCHW, def);
USE_LITE_KERNEL(sequence_reshape, kX86, kFloat, kNCHW, def);
USE_LITE_KERNEL(batch_norm, kX86, kFloat, kNCHW, def);
USE_LITE_KERNEL(cast, kX86, kFloat, kNCHW, def);
USE_LITE_KERNEL(cast, kX86, kFloat, kNCHW, fp16_to_any);
USE_LITE_KERNEL(density_prior_box, kX86, kFloat, kNCHW, def);
USE_LITE_KERNEL(range, kHost, kFloat, kAny, def);
USE_LITE_KERNEL(range, kHost, kInt32, kAny, def);
USE_LITE_KERNEL(squeeze, kHost, kAny, kAny, def);
USE_LITE_KERNEL(squeeze2, kHost, kAny, kAny, def);
USE_LITE_KERNEL(lookup_table, kX86, kFloat, kNCHW, def);
USE_LITE_KERNEL(lookup_table_v2, kX86, kFloat, kNCHW, def);
USE_LITE_KERNEL(var_conv_2d, kX86, kFloat, kNCHW, def);
USE_LITE_KERNEL(elementwise_sub, kX86, kFloat, kNCHW, def);
USE_LITE_KERNEL(elementwise_add, kX86, kFloat, kNCHW, def);
USE_LITE_KERNEL(elementwise_mul, kX86, kFloat, kNCHW, def);
USE_LITE_KERNEL(reshape, kX86, kFloat, kNCHW, def);
USE_LITE_KERNEL(reshape2, kX86, kFloat, kNCHW, def);
USE_LITE_KERNEL(reshape2, kX86, kInt64, kNCHW, def);
USE_LITE_KERNEL(reshape, kHost, kAny, kAny, def);
USE_LITE_KERNEL(reshape2, kHost, kAny, kAny, def);
USE_LITE_KERNEL(flatten, kHost, kAny, kAny, def);
USE_LITE_KERNEL(flatten2, kHost, kAny, kAny, def);
USE_LITE_KERNEL(search_group_padding, kX86, kFloat, kNCHW, def);